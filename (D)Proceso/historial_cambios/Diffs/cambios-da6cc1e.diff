commit da6cc1e5687f3a1766468d219a6f512d82e9e381
Author: Isaac Alejandro Ortiz Zaldivar <a24216345@alumnos.uady.mx>
Date:   Wed May 28 02:32:03 2025 -0600

    Refactor game and UI logic for improved clarity and functionality

diff --git a/codigo_fuente/src/bs_flow_card.c b/codigo_fuente/src/bs_flow_card.c
index 5b611e7..89f45a7 100644
--- a/codigo_fuente/src/bs_flow_card.c
+++ b/codigo_fuente/src/bs_flow_card.c
@@ -14,7 +14,6 @@ void funcion_carta_0(struct player *player, struct player *enemy) {
         }
         pausa_consola(1.3);
         capturar_coordenada(player, enemy);
-        limpiar_buffer_entrada(); // Limpiar el buffer de entrada para evitar problemas con la entrada del usuario.
         enter_continuar();
         mostrar_turno_y_tablero_G(player, enemy); // Mostrar el tablero después de disparar.
         printf("Tablero de guerra actualizado:\n");
@@ -159,13 +158,13 @@ void funcion_carta_10(struct player *player, struct player *enemy) {
     printf("Puedes disparar una vez, luego podras agarrar otra carta.\n");
     pausa_consola(1.3);
     capturar_coordenada(player, enemy);
-    limpiar_buffer_entrada(); // Limpiar el buffer de entrada para evitar problemas con la entrada del usuario.
     enter_continuar();
     mostrar_turno_y_tablero_G(player, enemy);
     printf("Tablero de guerra actualizado:\n");
     mostrar_ultimo_disparo_exitoso(player);
     pausa_consola(1);
     printf("Presiona enter para sacar otra carta.\n");
+    
     sacar_carta(player, enemy);
 }
 
diff --git a/codigo_fuente/src/bs_game.c b/codigo_fuente/src/bs_game.c
index 3d86369..ebfb47e 100644
--- a/codigo_fuente/src/bs_game.c
+++ b/codigo_fuente/src/bs_game.c
@@ -43,10 +43,16 @@ void partida() {
 
         menu_por_turno(jugador_actual, jugador_enemigo);
     
+        
         // Despues de acabar el turno, se muestra mensaje de que el turno ha terminado.
         printf("Tu turno ha terminado.\n");
         enter_continuar(); // Pausa antes de continuar.
         
+        // Si el jugador actual ya ha ganado, saltar al final del ciclo.
+        if (jugador_actual->enemy_hit_parts >= VICTORYCONDITION) {
+
+        } 
+        
         // Mensaje de cambio de turno
         printf("Ahora es turno de %s\n", jugador_enemigo->name);
         enter_continuar();
@@ -63,14 +69,23 @@ void partida() {
     } while(jugador_actual->enemy_hit_parts < VICTORYCONDITION && jugador_enemigo->enemy_hit_parts < VICTORYCONDITION);
 
     // Mensaje de victoria
-    if(jugador_actual->enemy_hit_parts >= VICTORYCONDITION) {
-            printf("%s ha ganado!\n", jugador_actual->name);
-        } else if(jugador_enemigo->enemy_hit_parts >= VICTORYCONDITION) {
-            printf("%s ha ganado!\n", jugador_enemigo->name);
-        }
+    color_txt(INFO_COLOR);
+    if (player1.enemy_hit_parts >= VICTORYCONDITION) {
+        printf("¡%s ", player1.name); 
+    } else if (player2.enemy_hit_parts >= VICTORYCONDITION) {
+        printf("¡%s ", player2.name);
+    }
+    color_txt(SUCCESS_COLOR);
+        printf("ha ganado la partida!\n");
+    color_txt(DEFAULT_COLOR);
+
     liberar_flota(&player1); // Liberar memoria de la flota del jugador 1.
 	liberar_flota(&player2); // Liberar memoria de la flota del jugador 2.
 
+    printf("Gracias por jugar a Batalla Naval.\n");
+    printf("Presione enter para regresar al menu principal.\n");
+    limpiar_buffer_entrada(); // Limpiar el buffer de entrada antes de esperar la tecla.
+    limpiar_pantalla(); // Limpiar la pantalla al finalizar la partida.
 }
 
 void menu_por_turno(struct player *player, struct player *enemy) {
diff --git a/codigo_fuente/src/bs_ship.c b/codigo_fuente/src/bs_ship.c
index 0135c39..4d4269f 100644
--- a/codigo_fuente/src/bs_ship.c
+++ b/codigo_fuente/src/bs_ship.c
@@ -88,7 +88,7 @@ void hundido(struct player *player, struct player *enemy) {
                 // Desactivar salvo si estaba activo
                 if (enemy->salvo) {
                     enemy->salvo = false;
-                    printf("El barco %d ha sido hundido, el modo Salvo enemigo se desactiva.\n", i + 1);
+                    printf("El modo Salvo enemigo se "); color_txt(INFO_COLOR); printf("desactiva.\n");
                 }
             }
         }
diff --git a/codigo_fuente/src/bs_ui.c b/codigo_fuente/src/bs_ui.c
index d9abccb..0d1dec6 100644
--- a/codigo_fuente/src/bs_ui.c
+++ b/codigo_fuente/src/bs_ui.c
@@ -453,11 +453,12 @@ void imprimirTableroGuerra(struct player *enemy, struct player *player) {
         // Mostrar chequeo de fila al final de la fila solo si está activado
         if (player->chequeo_fila[i]) {
             barcos_en_fila(player, enemy);
+            int barcosf = barcos_en_fila(player, enemy);
             color_txt(SUCCESS_COLOR);
-            if (player->contador_fila[i] > BOARD_SIZE - 1) {
-                printf(" %d", player->contador_fila[i]);
-            } else {
+            if (barcosf == BOARD_SIZE) {
                 printf("F "); // F = Full
+            } else {
+                printf("%d ", barcosf);
             }
             color_txt(DEFAULT_COLOR);
         }
@@ -468,12 +469,12 @@ void imprimirTableroGuerra(struct player *enemy, struct player *player) {
     printf("%*s   ", relleno, "");
         for (j = 0; j < BOARD_SIZE; j++) {
             if (player->chequeo_columna[j]) {
-                barcos_en_columna(player, enemy);
+                int barcosc = barcos_en_columna(player, enemy);
                 color_txt(SUCCESS_COLOR);
-                if (player->contador_columna[j] > BOARD_SIZE - 1) {
-                    printf("%d ", player->contador_columna[j]);    
-                } else {
+                if (barcosc == BOARD_SIZE) {
                     printf(" F "); // F = Full
+                } else {
+                    printf("%d ", barcosc);
                 }
                 color_txt(DEFAULT_COLOR);
             } else {
